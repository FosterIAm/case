Запуск програми:

перед тим як почати установку, запевніться що у вас немає нічого важливого в докерівській теці case/
бо саме там будуть лежати контейнери

Відкриваємо теку проекту в Bash-терміналі і виконуємо команду:
make init

(
    якщо у вашій системі нема утиліти Makefile, почергово виконайте 
    наступні команди (вони всі лежать у відповідному файлі):

    docker-compose down --remove-orphans
    docker-compose pull
    docker-compose build
    docker-compose up -d
    docker-compose run --rm api-php-cli composer install
)

Для того щоб увімкнути автоматичну розсилку виконуємо команду:
crontab -e

обираємо зручний редактор
додаємо стрічку кода:
0 0 * * * curl localhost:8081/send
зберігаємо зміни

існує 2 інших способа досягти автоматизації:

1)  створити окремий модуль, і пересадити його на якийсь інший порт. 
    Тоді в нас буде 2 різних АРІ - для користувачів і приватне. Однак
    в контексті цього додатку я вирішив що це нерелеватне рішення
    та як буде дуже багато повторбвань коду.

2)  Виконувати РНР код на пряму. Тобто не виносити його в запит
    і не використовувати curl, а на томість використати команду 
    0 0 * * * РНР абсолютний/шлях/до/файлу
    Такий підхід вимагає локально установленого РНР підходящої версії
    що є дуже не зручним підходом. 

якщо потрібно закрити проект застосуйте:
make down
(або docker-compose down)

якщо потрібно перезапустити проект застосуйте:
make restart
(або docker-compose down docker-compose up)

якщо потрібно запустити проект на основі вже згенерованої конфігурації застосуйте:
make up
(або docker-compose up)


серед додаткових технологій є:
    фреймворк slim v4
    бібліотека phpmailer v6.9